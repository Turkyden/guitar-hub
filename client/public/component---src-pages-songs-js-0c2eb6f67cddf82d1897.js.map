{"version":3,"sources":["webpack:///./src/pages/songs.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","song","key","node","id","style","display","justifyContent","to","frontmatter","path","date","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","react_default","dist_default","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","lineHeight","width","Layout","Fragment","header","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-songs-js-0c2eb6f67cddf82d1897.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <div>\r\n      { \r\n        data.allMarkdownRemark.edges.map(song => \r\n          <h3 key={song.node.id} style={{ display: `flex`, justifyContent: `space-between` }}>\r\n            <Link to={song.node.frontmatter.path}>{song.node.frontmatter.title} </Link>\r\n            <span>{song.node.frontmatter.date}</span>\r\n          </h3>\r\n        )\r\n      }\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark {\r\n      edges{\r\n        node{\r\n          id\r\n          frontmatter{\r\n            path\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ description, lang, meta, keywords, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Headroom from \"react-headroom\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <Headroom>\r\n    <header\r\n      style={{\r\n        background: `rgba(47,47,47,0.98)`,\r\n        marginBottom: `1.45rem`,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `1.45rem 1.0875rem`,\r\n        }}\r\n      >\r\n        <h1 style={{ margin: 0 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              color: `white`,\r\n              textDecoration: `none`,\r\n            }}\r\n          >\r\n            {siteTitle}\r\n          </Link>\r\n        </h1>\r\n        <div>\r\n          <div style={{ display: `flex`, justifyContent: `space-around`, lineHeight: `2.1`, width: 300, }}>\r\n            <Link to=\"/chords/\" style={{ color: `#fff` }}>Chords</Link>\r\n            <Link to=\"/songs/\" style={{ color: `#fff` }}>Songs</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  </Headroom>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `20px 1.0875rem 1.45rem`\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}